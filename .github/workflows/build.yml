name: Build FlashGBX

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Fetch latest version
        id: get_latest_version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/lesserkuma/FlashGBX/releases/latest | grep '"tag_name":' | awk -F\" '{print $4}')
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Create FlashGBX.spec
        run: |
          cat <<EOF > FlashGBX.spec
          # -*- mode: python ; coding: utf-8 -*-
          a = Analysis(
              ['run.py'],
              pathex=[],
              binaries=[],
              datas=[],
              hiddenimports=[],
              hookspath=[],
              hooksconfig={},
              runtime_hooks=[],
              excludes=[],
              noarchive=False,
          )
          pyz = PYZ(a.pure)
          exe = EXE(
              pyz,
              a.scripts,
              [],
              exclude_binaries=True,
              name='FlashGBX',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=True,
              console=False,
              disable_windowed_traceback=False,
              argv_emulation=False,
              target_arch=None,
              codesign_identity=None,
              entitlements_file=None,
              icon=['FlashGBX/res/icon.ico'],
          )
          coll = COLLECT(
              exe,
              a.binaries,
              a.datas,
              strip=False,
              upx=True,
              upx_exclude=[],
              name='FlashGBX',
          )
          info_plist = {
              'CFBundleName': 'FlashGBX',
              'CFBundleDisplayName': 'FlashGBX',
              'CFBundleGetInfoString': 'Reads and writes Game Boy and Game Boy Advance cartridge data.',
              'CFBundleShortVersionString': '$latest_version',
              'CFBundleIdentifier': 'com.lesserkuma.FlashGBX',
          }
          app = BUNDLE(
              coll,
              name='FlashGBX.app',
              icon='FlashGBX/res/icon.ico',
              bundle_identifier='com.lesserkuma.FlashGBX',
              info_plist=info_plist,
          )
          EOF

      - name: Build FlashGBX
        run: |
          pyinstaller FlashGBX.spec

      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: FlashGBX-${{ matrix.arch }}
