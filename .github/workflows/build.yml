name: Build FlashGBX

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Fetch latest version
        id: get_latest_version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/lesserkuma/FlashGBX/releases/latest | grep '"tag_name":' | awk -F\" '{print $4}')
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Create FlashGBX.spec
        run: |
          printf "# -*- mode: python ; coding: utf-8 -*-\n\n\
a = Analysis(\n\
    ['run.py'],\n\
    pathex=[],\n\
    binaries=[],\n\
    datas=[],\n\
    hiddenimports=[],\n\
    hookspath=[],\n\
    hooksconfig={},\n\
    runtime_hooks=[],\n\
    excludes=[],\n\
    noarchive=False,\n\
)\n\
pyz = PYZ(a.pure)\n\n\
exe = EXE(\n\
    pyz,\n\
    a.scripts,\n\
    [],\n\
    exclude_binaries=True,\n\
    name='FlashGBX',\n\
    debug=False,\n\
    bootloader_ignore_signals=False,\n\
    strip=False,\n\
    upx=True,\n\
    console=False,\n\
    disable_windowed_traceback=False,\n\
    argv_emulation=False,\n\
    target_arch=None,\n\
    codesign_identity=None,\n\
    entitlements_file=None,\n\
    icon=['FlashGBX/res/icon.ico'],\n\
)\n\
coll = COLLECT(\n\
    exe,\n\
    a.binaries,\n\
    a.datas,\n\
    strip=False,\n\
    upx=True,\n\
    upx_exclude=[],\n\
    name='FlashGBX',\n\
)\n\
info_plist = {\n\
    'CFBundleName': 'FlashGBX',\n\
    'CFBundleDisplayName': 'FlashGBX',\n\
    'CFBundleGetInfoString': 'Reads and writes Game Boy and Game Boy Advance cartridge data.',\n\
    'CFBundleShortVersionString': '%s',\n\
    'CFBundleIdentifier': 'com.lesserkuma.FlashGBX',\n\
}\n\
app = BUNDLE(\n\
    coll,\n\
    name='FlashGBX.app',\n\
    icon='FlashGBX/res/icon.ico',\n\
    bundle_identifier='com.lesserkuma.FlashGBX',\n\
    info_plist=info_plist,\n\
)" "$latest_version" > FlashGBX.spec

      - name: Build FlashGBX
        run: |
          pyinstaller FlashGBX.spec

      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: FlashGBX-${{ matrix.arch }}-v${{ env.latest_version }}
          path: dist/FlashGBX.app

      - name: Notify about successful build
        run: echo "Successfully built FlashGBX for ${{ matrix.arch }} architecture."

