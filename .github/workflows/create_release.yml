name: Create FlashGBX Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Download latest version artifact
        uses: actions/download-artifact@v2
        with:
          name: latest_version
          path: .

      - name: Read latest version from artifact
        id: read_latest_version
        run: |
          latest_version=$(cat latest_version)
          echo "latest_version=$latest_version" >> $GITHUB_ENV
          echo "Latest version: $latest_version"
          
      - name: Download arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: FlashGBX-arm64-v$latest_version
          path: ./dist

      - name: Download amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: FlashGBX-amd64-v$latest_version
          path: ./dist

      - name: Create release
        run: |
          release_repo="${{ github.repository }}"
          echo "Creating a release for FlashGBX v$latest_version."
          
          arm64_dmg="./dist/FlashGBX-arm64-v$latest_version/FlashGBX-arm64.dmg"
          amd64_dmg="./dist/FlashGBX-amd64-v$latest_version/FlashGBX-amd64.dmg"
          if [ -f "$arm64_dmg" ] && [ -f "$amd64_dmg" ]; then
            release_notes=$(cat <<EOF
          App compiled and packaged from the official repo.

          Contains builds for both Apple Silicon (arm64) and Intel (amd64).

          If you can't open it, it probably got quarantined during download. Run the following to unquarantine it:
          xattr -d com.apple.quarantine /path/to/FlashGBX.app
          EOF
            )
            gh release create "$latest_version test" \
              --repo "$release_repo" \
              --title "FlashGBX v$latest_version test" \
              --notes "$release_notes" \
              "$arm64_dmg" "$amd64_dmg"
            echo "Release successfully created for FlashGBX v$latest_version."
          else
            echo "DMG files not found. Release not created."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
